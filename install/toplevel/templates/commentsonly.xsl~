<xsl:stylesheet version='1.0' xmlns:xsl='http://www.w3.org/1999/XSL/Transform'>
<!-- xslt for subject reports presented in a single table with with one to several 
	 assessment grades and a short written comment; the table may span multiple pages -->

<xsl:output method='html' />

<xsl:template match='text()' />


<xsl:template match="html/body/div">
  <xsl:apply-templates select="student"/>
</xsl:template>

<xsl:template match="student">
  <div id="logo">
	<img src="../images/reportlogo.png" />
  </div>

<div class="studenthead">
	<table>
	  <tr>
		<td>
		  <xsl:value-of select="reports/covertitle/text()" />
		</td>
	  </tr>
	  <tr>
		<td>
		  <label>
			Date
		  </label>
		  <xsl:value-of select="reports/publishdate/text()" />
		</td>
	  </tr>
	  <tr>
		<td>&#160;
		</td>
	  </tr>
	  <tr>
		<td>
		  <label>
			Student
		  </label>
		  <xsl:value-of select="displayfullname/value/text()" />&#160;
		</td>
	  </tr>
	  <tr>		
		<td>
		  <label>
			Class
		  </label>
		  <xsl:value-of select="registrationgroup/value/text()" />&#160;
		</td>
	  </tr>
	</table>
</div>

<div class='spacer'></div>

<xsl:apply-templates select="reports"/>

<hr />

</xsl:template>

<xsl:template match="reports">

<div class="summary">
  <table class="subject">
	<tr>
	  <td>
		  <label>No. of sessions attended <br /> No. de asistencia</label>
	  </td>
	  <td class="attcell">
		<div>&#160;
			<xsl:value-of select="attendance/summary/attended/value/text()" />
		</div>
	  </td>
	  <td>
		  <label>No. of lates <br /> No. de tardes</label>
	  </td>
	  <td class="attcell">
		<div>&#160;
			<xsl:value-of select="attendance/summary/late/value/text()" />
		</div>
	  </td>
	</tr>
	<tr>
	  <td>
		  <label>Out of a total of <br /> Sobre un total de</label>
	  </td>
	  <td class="attcell">
		<div>&#160;
		  <xsl:value-of select="attendance/summary/attended/value/text() + attendance/summary/absentauthorised/value/text() + attendance/summary/absentunauthorised/value/text()" />
		</div>
	  </td>
	  <td>
		  <label>No. of absences <br /> No. de ausencias</label>
	  </td>
	  <td class="attcell">
		<div>&#160;
			<xsl:value-of select="attendance/summary/absentauthorised/value/text() + attendance/summary/absentunauthorised/value/text()" />
		</div>
	  </td>
	</tr>
  </table>
</div>

<xsl:apply-templates select="report">
  <xsl:sort select="course/value/text()" order="descending" case-order="upper-first" />
  <xsl:sort select="component/sequence/text()" order="ascending" case-order="upper-first" />
  <xsl:sort select="component/status/text()" order="descending" case-order="upper-first" />
  <xsl:sort select="component/value/text()" order="ascending" case-order="upper-first" />
</xsl:apply-templates>

<div class="spacer"></div>

<xsl:apply-templates select="summaries/summary" />

  <xsl:if test="summaryassessments/assessment[printlabel/value/text()='Appointment']/result/value/text()!=' '" >
	<div class="summary">
	  <table class="subject">
		<tr>
		  <td>
			<label>Please make an appointment to see your child's class teacher.</label>
		  </td>
		  <td class="attcell">
			<div>&#160;
			<xsl:value-of select="summaryassessments/assessment[printlabel/value/text()='Appointment']/result/value/text()" />
			</div>
		  </td>
		</tr>
	  </table>
	</div>
  </xsl:if>

</xsl:template>


<xsl:template match="reports/summaries/summary">
  <xsl:if test="description/type='com' and comments/text()!=' '" >
	<div class="summary">
	  <label><xsl:value-of select="description/value/text()" /></label>&#160;
	  <p class="comment-text">
		<xsl:value-of select="comments/comment/text/value/text()" />
	  </p>
	  <p class="comment-sig">
		<xsl:text>&#160;-&#160;</xsl:text>
		<xsl:value-of select="comments/comment/teacher/value/text()" />
	  </p>
	</div>
  </xsl:if>
</xsl:template>


<xsl:template match="report">
	<xsl:if test="position() mod 3 = 1 and position()!=1">
	  <div class="spacer">
	  </div>
	  <hr />
	  <div class="spacer">
	  </div>
	</xsl:if>

  <div class="subject">
	<label class="label">
	  <xsl:choose>
		<xsl:when test="component/value/text()!=' '">
		  <xsl:value-of select="component/value/text()" />
		</xsl:when>
		<xsl:otherwise>
		  <xsl:value-of select="subject/value/text()" />
		</xsl:otherwise>
	  </xsl:choose>
	</label>
	<br />

	<div class="subject-comment">
	  <p class="comment-text">
		<xsl:value-of select="comments/comment/text/value/text()" />
	  </p>
	  <xsl:text>&#160;</xsl:text>
	</div>
  </div>

</xsl:template>


<xsl:template name="assheader">
  <xsl:param name="index">1</xsl:param>
  <xsl:variable name="maxindex">
	<xsl:value-of select="count(asstable/ass/label)+1"/>
  </xsl:variable>
  <xsl:variable name='asslabel' select='asstable/ass/label' />
  <xsl:if test="$index &lt; $maxindex">
	<th>
		<xsl:value-of select="$asslabel[$index]" />  
		<xsl:text>&#160; </xsl:text>
	</th>
    <xsl:call-template name="assheader">
	  <xsl:with-param name="index" select="$index + 1"/>
    </xsl:call-template>
  </xsl:if>
</xsl:template>


<xsl:template name="asscell">
  <xsl:param name="index">1</xsl:param>
  <xsl:variable name="maxindex">
	<xsl:value-of select="count(../asstable/ass/label)+1"/>
  </xsl:variable>
  <xsl:variable name="asslabel" select="../asstable/ass/label" />
  <xsl:variable name="ass" select="assessments/assessment" />

  <xsl:if test="$index &lt; $maxindex">
	<td class="asscell">
	  <div>
		<xsl:choose>
		  <xsl:when test="$ass[printlabel/value/text()=$asslabel[$index]]/result/value!=' '">
			<xsl:value-of select="$ass[printlabel/value/text()=$asslabel[$index]]/result/value/text()" />
		  </xsl:when>
		  <xsl:otherwise>
			<xsl:text>&#160; </xsl:text>
		  </xsl:otherwise>
		</xsl:choose>
	  </div>
	</td>
    <xsl:call-template name="asscell">
	  <xsl:with-param name="index" select="$index + 1"/>
    </xsl:call-template>
  </xsl:if>
</xsl:template>

<xsl:template name="strandrow">
  <xsl:param name="strandass"> </xsl:param>
  <xsl:param name="index">1</xsl:param>
  <xsl:variable name="asslabel" select="asstable/ass/label" />

  <xsl:for-each select="$strandass/value">
	  <tr class="strand">
		<th>
		  <xsl:value-of select="./text()"/>
		</th>
		<xsl:call-template name="strandasscell">
		  <xsl:with-param name="strand" select="./text()"/>
		  <xsl:with-param name="index" select="1"/>
		</xsl:call-template>
	  </tr>
  </xsl:for-each>

</xsl:template>

<xsl:template name="strandasscell">
  <xsl:param name="strand"> </xsl:param>
  <xsl:param name="index">1</xsl:param>
  <xsl:variable name="maxindex">
	<xsl:value-of select="count(../../../../../asstable/ass/label)+1"/>
  </xsl:variable>
  <xsl:variable name='asslabel' select='../../../../../asstable/ass/label' />

  <xsl:if test="$index &lt; $maxindex">
	<td class="asscell">
	  <div>
	  <xsl:value-of select="../../../../assessments/assessment[component/value/text()=$strand][printlabel/value/text()=$asslabel[$index]]/result/value/text()" />  
	  <xsl:text>&#160; </xsl:text>
	  </div>
	</td>
    <xsl:call-template name="strandasscell">
	  <xsl:with-param name="strand" select="$strand"/>
	  <xsl:with-param name="index" select="$index + 1"/>
    </xsl:call-template>
  </xsl:if>
</xsl:template>


</xsl:stylesheet>
